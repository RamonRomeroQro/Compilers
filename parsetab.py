
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASS_OP BOOL CONSTANT DIVIDE DO ELSE END EQ GE GT ID IF INPUT_I INPUT_S INTEGER LE LPAREN LT MINUS MODULO NE NEWLINE NOT OR PLUS PRINT RPAREN SEMICOLON STRING THEN TIMES WHILEprogram : statements\n    statements : T statement T statements\t\n                    | T statement T \n    T : T NEWLINE\n    |\n    \n    statement   : var_declaration \n                | if_statement\n                | while_statement\n                | print_statement\n                | input_statement\n                | cons_declaration\n    \n    input_statement : INPUT_I\n                    | INPUT_S\n    \n    print_statement : PRINT lit_value \n                    | PRINT expression \n                    | PRINT ID \n                    | PRINT CONSTANT \n                   \n    \n    var_declaration : ID ASS_OP lit_value \n                    | ID ASS_OP expression \n                    | ID ASS_OP ID \n                    | ID ASS_OP CONSTANT \n                    | ID ASS_OP input_statement \n    \n    cons_declaration : CONSTANT ASS_OP lit_value \n                    | CONSTANT ASS_OP expression \n                    | CONSTANT ASS_OP ID \n                    | CONSTANT ASS_OP CONSTANT\n                    | CONSTANT ASS_OP input_statement \n    \n    if_statement : IF expression THEN statements END\n                         | IF expression THEN statements ELSE statements END\n    \n    while_statement : WHILE expression DO statements END\n    \n    expression      : math_expression\n                    | MINUS math_expression\n                    | relational_expression\n    \n    math_expression : term PLUS math_expression\n                    | term MINUS math_expression\n                    | term \n    \n    relational_expression : math_expression AND math_expression\n                        | math_expression OR math_expression \n                        | math_expression GT math_expression \n                        | math_expression LT math_expression \n                        | math_expression GE math_expression \n                        | math_expression LE math_expression\n                        | math_expression NE math_expression\n                        | math_expression EQ math_expression \n                        | NOT math_expression\n    \n    term    : factor TIMES term\n            | factor DIVIDE term\n            | factor MODULO term\n            | factor\n    \n    factor : lit_value\n            | LPAREN expression RPAREN\n            | ID\n            | CONSTANT\n    \n    lit_value   : INTEGER \n                | STRING \n                | BOOL \n    '
    
_lr_action_items = {'NEWLINE':([0,3,4,5,6,7,8,9,10,11,17,18,19,23,25,26,28,29,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,61,64,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,90,],[-5,5,-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,5,-31,-33,-36,-49,-50,-52,-53,-54,-55,-56,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,-32,-45,-5,-37,-38,-39,-40,-41,-42,-43,-44,-34,-35,-46,-47,-48,-51,-28,-5,-30,-29,]),'ID':([0,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,90,],[-5,12,-5,-4,-6,-7,-8,-9,-10,-11,31,31,39,-12,-13,-5,42,50,-31,31,-33,-36,31,-49,-50,31,-52,-53,-54,-55,-56,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,31,31,31,31,31,31,31,31,-32,31,31,-45,31,31,31,-5,-37,-38,-39,-40,-41,-42,-43,-44,-34,-35,-46,-47,-48,-51,-28,-5,-30,-29,]),'IF':([0,3,4,5,6,7,8,9,10,11,17,18,19,23,25,26,28,29,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,61,64,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,90,],[-5,14,-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-5,-31,-33,-36,-49,-50,-52,-53,-54,-55,-56,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,-32,-45,-5,-37,-38,-39,-40,-41,-42,-43,-44,-34,-35,-46,-47,-48,-51,-28,-5,-30,-29,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,17,18,19,23,25,26,28,29,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,61,64,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,90,],[-5,15,-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-5,-31,-33,-36,-49,-50,-52,-53,-54,-55,-56,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,-32,-45,-5,-37,-38,-39,-40,-41,-42,-43,-44,-34,-35,-46,-47,-48,-51,-28,-5,-30,-29,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,17,18,19,23,25,26,28,29,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,61,64,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,90,],[-5,16,-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-5,-31,-33,-36,-49,-50,-52,-53,-54,-55,-56,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,-32,-45,-5,-37,-38,-39,-40,-41,-42,-43,-44,-34,-35,-46,-47,-48,-51,-28,-5,-30,-29,]),'INPUT_I':([0,3,4,5,6,7,8,9,10,11,17,18,19,20,21,23,25,26,28,29,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,61,64,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,90,],[-5,17,-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-5,17,17,-31,-33,-36,-49,-50,-52,-53,-54,-55,-56,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,-32,-45,-5,-37,-38,-39,-40,-41,-42,-43,-44,-34,-35,-46,-47,-48,-51,-28,-5,-30,-29,]),'INPUT_S':([0,3,4,5,6,7,8,9,10,11,17,18,19,20,21,23,25,26,28,29,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,61,64,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,90,],[-5,18,-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-5,18,18,-31,-33,-36,-49,-50,-52,-53,-54,-55,-56,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,-32,-45,-5,-37,-38,-39,-40,-41,-42,-43,-44,-34,-35,-46,-47,-48,-51,-28,-5,-30,-29,]),'CONSTANT':([0,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,90,],[-5,13,-5,-4,-6,-7,-8,-9,-10,-11,32,32,40,-12,-13,-5,45,47,-31,32,-33,-36,32,-49,-50,32,-52,-53,-54,-55,-56,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,32,32,32,32,32,32,32,32,-32,32,32,-45,32,32,32,-5,-37,-38,-39,-40,-41,-42,-43,-44,-34,-35,-46,-47,-48,-51,-28,-5,-30,-29,]),'$end':([1,2,4,5,6,7,8,9,10,11,17,18,19,23,25,26,28,29,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,61,64,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,88,90,],[0,-1,-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-3,-31,-33,-36,-49,-50,-52,-53,-54,-55,-56,-14,-15,-16,-17,-2,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-32,-45,-37,-38,-39,-40,-41,-42,-43,-44,-34,-35,-46,-47,-48,-51,-28,-30,-29,]),'END':([4,5,6,7,8,9,10,11,17,18,19,23,25,26,28,29,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,61,64,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,],[-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-3,-31,-33,-36,-49,-50,-52,-53,-54,-55,-56,-14,-15,-16,-17,-2,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-32,-45,86,-37,-38,-39,-40,-41,-42,-43,-44,-34,-35,-46,-47,-48,-51,88,-28,-30,90,-29,]),'ELSE':([4,5,6,7,8,9,10,11,17,18,19,23,25,26,28,29,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,61,64,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,88,90,],[-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-3,-31,-33,-36,-49,-50,-52,-53,-54,-55,-56,-14,-15,-16,-17,-2,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-32,-45,87,-37,-38,-39,-40,-41,-42,-43,-44,-34,-35,-46,-47,-48,-51,-28,-30,-29,]),'ASS_OP':([12,13,],[20,21,]),'MINUS':([14,15,16,20,21,26,28,29,30,31,32,33,34,35,37,39,40,42,43,45,47,48,50,81,82,83,84,],[24,24,24,24,24,63,-49,-50,24,-52,-53,-54,-55,-56,-50,-52,-53,-52,-50,-53,-53,-50,-52,-46,-47,-48,-51,]),'NOT':([14,15,16,20,21,30,],[27,27,27,27,27,27,]),'LPAREN':([14,15,16,20,21,24,27,30,53,54,55,56,57,58,59,60,62,63,65,66,67,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'INTEGER':([14,15,16,20,21,24,27,30,53,54,55,56,57,58,59,60,62,63,65,66,67,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'STRING':([14,15,16,20,21,24,27,30,53,54,55,56,57,58,59,60,62,63,65,66,67,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'BOOL':([14,15,16,20,21,24,27,30,53,54,55,56,57,58,59,60,62,63,65,66,67,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'THEN':([22,23,25,26,28,29,31,32,33,34,35,61,64,71,72,73,74,75,76,77,78,79,80,81,82,83,84,],[52,-31,-33,-36,-49,-50,-52,-53,-54,-55,-56,-32,-45,-37,-38,-39,-40,-41,-42,-43,-44,-34,-35,-46,-47,-48,-51,]),'DO':([23,25,26,28,29,31,32,33,34,35,36,61,64,71,72,73,74,75,76,77,78,79,80,81,82,83,84,],[-31,-33,-36,-49,-50,-52,-53,-54,-55,-56,69,-32,-45,-37,-38,-39,-40,-41,-42,-43,-44,-34,-35,-46,-47,-48,-51,]),'RPAREN':([23,25,26,28,29,31,32,33,34,35,61,64,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,],[-31,-33,-36,-49,-50,-52,-53,-54,-55,-56,-32,-45,84,-37,-38,-39,-40,-41,-42,-43,-44,-34,-35,-46,-47,-48,-51,]),'AND':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,79,80,81,82,83,84,],[53,-36,-49,-50,-52,-53,-54,-55,-56,-50,-52,-53,-52,-50,-53,-53,-50,-52,-34,-35,-46,-47,-48,-51,]),'OR':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,79,80,81,82,83,84,],[54,-36,-49,-50,-52,-53,-54,-55,-56,-50,-52,-53,-52,-50,-53,-53,-50,-52,-34,-35,-46,-47,-48,-51,]),'GT':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,79,80,81,82,83,84,],[55,-36,-49,-50,-52,-53,-54,-55,-56,-50,-52,-53,-52,-50,-53,-53,-50,-52,-34,-35,-46,-47,-48,-51,]),'LT':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,79,80,81,82,83,84,],[56,-36,-49,-50,-52,-53,-54,-55,-56,-50,-52,-53,-52,-50,-53,-53,-50,-52,-34,-35,-46,-47,-48,-51,]),'GE':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,79,80,81,82,83,84,],[57,-36,-49,-50,-52,-53,-54,-55,-56,-50,-52,-53,-52,-50,-53,-53,-50,-52,-34,-35,-46,-47,-48,-51,]),'LE':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,79,80,81,82,83,84,],[58,-36,-49,-50,-52,-53,-54,-55,-56,-50,-52,-53,-52,-50,-53,-53,-50,-52,-34,-35,-46,-47,-48,-51,]),'NE':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,79,80,81,82,83,84,],[59,-36,-49,-50,-52,-53,-54,-55,-56,-50,-52,-53,-52,-50,-53,-53,-50,-52,-34,-35,-46,-47,-48,-51,]),'EQ':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,79,80,81,82,83,84,],[60,-36,-49,-50,-52,-53,-54,-55,-56,-50,-52,-53,-52,-50,-53,-53,-50,-52,-34,-35,-46,-47,-48,-51,]),'PLUS':([26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,81,82,83,84,],[62,-49,-50,-52,-53,-54,-55,-56,-50,-52,-53,-52,-50,-53,-53,-50,-52,-46,-47,-48,-51,]),'TIMES':([28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,84,],[65,-50,-52,-53,-54,-55,-56,-50,-52,-53,-52,-50,-53,-53,-50,-52,-51,]),'DIVIDE':([28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,84,],[66,-50,-52,-53,-54,-55,-56,-50,-52,-53,-52,-50,-53,-53,-50,-52,-51,]),'MODULO':([28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,84,],[67,-50,-52,-53,-54,-55,-56,-50,-52,-53,-52,-50,-53,-53,-50,-52,-51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,19,52,69,87,],[2,41,70,85,89,]),'T':([0,4,19,52,69,87,],[3,19,3,3,3,3,]),'statement':([3,],[4,]),'var_declaration':([3,],[6,]),'if_statement':([3,],[7,]),'while_statement':([3,],[8,]),'print_statement':([3,],[9,]),'input_statement':([3,20,21,],[10,46,51,]),'cons_declaration':([3,],[11,]),'expression':([14,15,16,20,21,30,],[22,36,38,44,49,68,]),'math_expression':([14,15,16,20,21,24,27,30,53,54,55,56,57,58,59,60,62,63,],[23,23,23,23,23,61,64,23,71,72,73,74,75,76,77,78,79,80,]),'relational_expression':([14,15,16,20,21,30,],[25,25,25,25,25,25,]),'term':([14,15,16,20,21,24,27,30,53,54,55,56,57,58,59,60,62,63,65,66,67,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,81,82,83,]),'factor':([14,15,16,20,21,24,27,30,53,54,55,56,57,58,59,60,62,63,65,66,67,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'lit_value':([14,15,16,20,21,24,27,30,53,54,55,56,57,58,59,60,62,63,65,66,67,],[29,29,37,43,48,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',36),
  ('statements -> T statement T statements','statements',4,'p_statements','parser.py',44),
  ('statements -> T statement T','statements',3,'p_statements','parser.py',45),
  ('T -> T NEWLINE','T',2,'p_T','parser.py',69),
  ('T -> <empty>','T',0,'p_T','parser.py',70),
  ('statement -> var_declaration','statement',1,'p_statement','parser.py',79),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',80),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',81),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',82),
  ('statement -> input_statement','statement',1,'p_statement','parser.py',83),
  ('statement -> cons_declaration','statement',1,'p_statement','parser.py',84),
  ('input_statement -> INPUT_I','input_statement',1,'p_input_statement','parser.py',94),
  ('input_statement -> INPUT_S','input_statement',1,'p_input_statement','parser.py',95),
  ('print_statement -> PRINT lit_value','print_statement',2,'p_print_statement','parser.py',104),
  ('print_statement -> PRINT expression','print_statement',2,'p_print_statement','parser.py',105),
  ('print_statement -> PRINT ID','print_statement',2,'p_print_statement','parser.py',106),
  ('print_statement -> PRINT CONSTANT','print_statement',2,'p_print_statement','parser.py',107),
  ('var_declaration -> ID ASS_OP lit_value','var_declaration',3,'p_var_declaration','parser.py',117),
  ('var_declaration -> ID ASS_OP expression','var_declaration',3,'p_var_declaration','parser.py',118),
  ('var_declaration -> ID ASS_OP ID','var_declaration',3,'p_var_declaration','parser.py',119),
  ('var_declaration -> ID ASS_OP CONSTANT','var_declaration',3,'p_var_declaration','parser.py',120),
  ('var_declaration -> ID ASS_OP input_statement','var_declaration',3,'p_var_declaration','parser.py',121),
  ('cons_declaration -> CONSTANT ASS_OP lit_value','cons_declaration',3,'p_cons_declaration','parser.py',129),
  ('cons_declaration -> CONSTANT ASS_OP expression','cons_declaration',3,'p_cons_declaration','parser.py',130),
  ('cons_declaration -> CONSTANT ASS_OP ID','cons_declaration',3,'p_cons_declaration','parser.py',131),
  ('cons_declaration -> CONSTANT ASS_OP CONSTANT','cons_declaration',3,'p_cons_declaration','parser.py',132),
  ('cons_declaration -> CONSTANT ASS_OP input_statement','cons_declaration',3,'p_cons_declaration','parser.py',133),
  ('if_statement -> IF expression THEN statements END','if_statement',5,'p_if_statement','parser.py',142),
  ('if_statement -> IF expression THEN statements ELSE statements END','if_statement',7,'p_if_statement','parser.py',143),
  ('while_statement -> WHILE expression DO statements END','while_statement',5,'p_while_statement','parser.py',157),
  ('expression -> math_expression','expression',1,'p_expression','parser.py',167),
  ('expression -> MINUS math_expression','expression',2,'p_expression','parser.py',168),
  ('expression -> relational_expression','expression',1,'p_expression','parser.py',169),
  ('math_expression -> term PLUS math_expression','math_expression',3,'p_math_expression','parser.py',182),
  ('math_expression -> term MINUS math_expression','math_expression',3,'p_math_expression','parser.py',183),
  ('math_expression -> term','math_expression',1,'p_math_expression','parser.py',184),
  ('relational_expression -> math_expression AND math_expression','relational_expression',3,'p_relational_expression','parser.py',199),
  ('relational_expression -> math_expression OR math_expression','relational_expression',3,'p_relational_expression','parser.py',200),
  ('relational_expression -> math_expression GT math_expression','relational_expression',3,'p_relational_expression','parser.py',201),
  ('relational_expression -> math_expression LT math_expression','relational_expression',3,'p_relational_expression','parser.py',202),
  ('relational_expression -> math_expression GE math_expression','relational_expression',3,'p_relational_expression','parser.py',203),
  ('relational_expression -> math_expression LE math_expression','relational_expression',3,'p_relational_expression','parser.py',204),
  ('relational_expression -> math_expression NE math_expression','relational_expression',3,'p_relational_expression','parser.py',205),
  ('relational_expression -> math_expression EQ math_expression','relational_expression',3,'p_relational_expression','parser.py',206),
  ('relational_expression -> NOT math_expression','relational_expression',2,'p_relational_expression','parser.py',207),
  ('term -> factor TIMES term','term',3,'p_term','parser.py',235),
  ('term -> factor DIVIDE term','term',3,'p_term','parser.py',236),
  ('term -> factor MODULO term','term',3,'p_term','parser.py',237),
  ('term -> factor','term',1,'p_term','parser.py',238),
  ('factor -> lit_value','factor',1,'p_factor','parser.py',255),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',256),
  ('factor -> ID','factor',1,'p_factor','parser.py',257),
  ('factor -> CONSTANT','factor',1,'p_factor','parser.py',258),
  ('lit_value -> INTEGER','lit_value',1,'p_lit_value','parser.py',269),
  ('lit_value -> STRING','lit_value',1,'p_lit_value','parser.py',270),
  ('lit_value -> BOOL','lit_value',1,'p_lit_value','parser.py',271),
]
