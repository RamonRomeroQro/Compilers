
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASS_OP BOOL CONSTANT DIVIDE DO ELSE END EQ GE GT ID IF INPUT_I INPUT_S INTEGER LE LPAREN LT MINUS MODULO NE NEWLINE NOT OR PLUS PRINT RPAREN SEMICOLON STRING THEN TIMES WHILEstatements : T statement T statements\t\n        | T statement T \n        T : T NEWLINE\n    |\n    \n    statement   : var_declaration \n                | if_statement\n                | while_statement\n                | print_statement\n                | input_statement\n                | cons_declaration\n    \n    input_statement : INPUT_I\n                    | INPUT_S\n    \n    print_statement : PRINT lit_value \n                    | PRINT expression \n                    | PRINT ID \n                    | PRINT CONSTANT \n    \n    var_declaration : ID ASS_OP lit_value \n                    | ID ASS_OP expression \n                    | ID ASS_OP ID \n                    | ID ASS_OP CONSTANT \n                    | ID ASS_OP input_statement \n    \n    cons_declaration : CONSTANT ASS_OP lit_value \n                    | CONSTANT ASS_OP expression \n                    | CONSTANT ASS_OP ID \n                    | CONSTANT ASS_OP CONSTANT\n                    | CONSTANT ASS_OP input_statement \n    \n    if_statement : IF expression THEN statements END\n                         | IF expression THEN statements ELSE statements END\n    \n    while_statement : WHILE expression DO statements END\n    \n    expression      : math_expression\n                    | MINUS math_expression\n                            | relational_expression\n    \n    math_expression : term PLUS math_expression\n                    | term MINUS math_expression\n                    | term \n    \n    relational_expression : math_expression relational_op math_expression\n                          | NOT math_expression\n    \n    term    : factor TIMES term\n            | factor DIVIDE term\n            | factor MODULO term\n            | factor\n    \n    factor : lit_value\n            | LPAREN expression RPAREN\n            | ID\n            | CONSTANT\n    \n    relational_op   : AND \n                    | OR \n                    | GT \n                    | LT \n                    | GE \n                    | LE\n                    | NE\n                    | EQ \n    \n    lit_value   : INTEGER \n                | STRING \n                | BOOL \n    '
    
_lr_action_items = {'NEWLINE':([0,2,3,4,5,6,7,8,9,10,16,17,18,22,24,25,27,28,30,31,32,33,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,61,64,69,71,72,73,74,75,76,77,79,80,81,83,],[-4,4,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,4,-30,-32,-35,-41,-42,-44,-45,-54,-55,-56,-13,-14,-15,-16,-19,-17,-18,-20,-21,-25,-22,-23,-24,-26,-4,-31,-37,-4,-36,-33,-34,-38,-39,-40,-43,-27,-4,-29,-28,]),'ID':([0,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,71,72,73,74,75,76,77,79,80,81,83,],[-4,11,-4,-3,-5,-6,-7,-8,-9,-10,30,30,38,-11,-12,-4,41,49,-30,30,-32,-35,30,-41,-42,30,-44,-45,-54,-55,-56,-13,-14,-15,-16,-19,-17,-18,-20,-21,-25,-22,-23,-24,-26,-4,30,-46,-47,-48,-49,-50,-51,-52,-53,-31,30,30,-37,30,30,30,-4,-36,-33,-34,-38,-39,-40,-43,-27,-4,-29,-28,]),'IF':([0,2,3,4,5,6,7,8,9,10,16,17,18,22,24,25,27,28,30,31,32,33,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,61,64,69,71,72,73,74,75,76,77,79,80,81,83,],[-4,13,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-30,-32,-35,-41,-42,-44,-45,-54,-55,-56,-13,-14,-15,-16,-19,-17,-18,-20,-21,-25,-22,-23,-24,-26,-4,-31,-37,-4,-36,-33,-34,-38,-39,-40,-43,-27,-4,-29,-28,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,16,17,18,22,24,25,27,28,30,31,32,33,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,61,64,69,71,72,73,74,75,76,77,79,80,81,83,],[-4,14,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-30,-32,-35,-41,-42,-44,-45,-54,-55,-56,-13,-14,-15,-16,-19,-17,-18,-20,-21,-25,-22,-23,-24,-26,-4,-31,-37,-4,-36,-33,-34,-38,-39,-40,-43,-27,-4,-29,-28,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,16,17,18,22,24,25,27,28,30,31,32,33,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,61,64,69,71,72,73,74,75,76,77,79,80,81,83,],[-4,15,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-30,-32,-35,-41,-42,-44,-45,-54,-55,-56,-13,-14,-15,-16,-19,-17,-18,-20,-21,-25,-22,-23,-24,-26,-4,-31,-37,-4,-36,-33,-34,-38,-39,-40,-43,-27,-4,-29,-28,]),'INPUT_I':([0,2,3,4,5,6,7,8,9,10,16,17,18,19,20,22,24,25,27,28,30,31,32,33,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,61,64,69,71,72,73,74,75,76,77,79,80,81,83,],[-4,16,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,16,16,-30,-32,-35,-41,-42,-44,-45,-54,-55,-56,-13,-14,-15,-16,-19,-17,-18,-20,-21,-25,-22,-23,-24,-26,-4,-31,-37,-4,-36,-33,-34,-38,-39,-40,-43,-27,-4,-29,-28,]),'INPUT_S':([0,2,3,4,5,6,7,8,9,10,16,17,18,19,20,22,24,25,27,28,30,31,32,33,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,61,64,69,71,72,73,74,75,76,77,79,80,81,83,],[-4,17,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,17,17,-30,-32,-35,-41,-42,-44,-45,-54,-55,-56,-13,-14,-15,-16,-19,-17,-18,-20,-21,-25,-22,-23,-24,-26,-4,-31,-37,-4,-36,-33,-34,-38,-39,-40,-43,-27,-4,-29,-28,]),'CONSTANT':([0,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,71,72,73,74,75,76,77,79,80,81,83,],[-4,12,-4,-3,-5,-6,-7,-8,-9,-10,31,31,39,-11,-12,-4,44,46,-30,31,-32,-35,31,-41,-42,31,-44,-45,-54,-55,-56,-13,-14,-15,-16,-19,-17,-18,-20,-21,-25,-22,-23,-24,-26,-4,31,-46,-47,-48,-49,-50,-51,-52,-53,-31,31,31,-37,31,31,31,-4,-36,-33,-34,-38,-39,-40,-43,-27,-4,-29,-28,]),'$end':([1,3,4,5,6,7,8,9,10,16,17,18,22,24,25,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,61,64,71,72,73,74,75,76,77,79,81,83,],[0,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-2,-30,-32,-35,-41,-42,-44,-45,-54,-55,-56,-13,-14,-15,-16,-1,-19,-17,-18,-20,-21,-25,-22,-23,-24,-26,-31,-37,-36,-33,-34,-38,-39,-40,-43,-27,-29,-28,]),'END':([3,4,5,6,7,8,9,10,16,17,18,22,24,25,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,61,64,70,71,72,73,74,75,76,77,78,79,81,82,83,],[-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-2,-30,-32,-35,-41,-42,-44,-45,-54,-55,-56,-13,-14,-15,-16,-1,-19,-17,-18,-20,-21,-25,-22,-23,-24,-26,-31,-37,79,-36,-33,-34,-38,-39,-40,-43,81,-27,-29,83,-28,]),'ELSE':([3,4,5,6,7,8,9,10,16,17,18,22,24,25,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,61,64,70,71,72,73,74,75,76,77,79,81,83,],[-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-2,-30,-32,-35,-41,-42,-44,-45,-54,-55,-56,-13,-14,-15,-16,-1,-19,-17,-18,-20,-21,-25,-22,-23,-24,-26,-31,-37,80,-36,-33,-34,-38,-39,-40,-43,-27,-29,-28,]),'ASS_OP':([11,12,],[19,20,]),'MINUS':([13,14,15,19,20,25,27,28,29,30,31,32,33,34,36,38,39,41,42,44,46,47,49,74,75,76,77,],[23,23,23,23,23,63,-41,-42,23,-44,-45,-54,-55,-56,-42,-44,-45,-44,-42,-45,-45,-42,-44,-38,-39,-40,-43,]),'NOT':([13,14,15,19,20,29,],[26,26,26,26,26,26,]),'LPAREN':([13,14,15,19,20,23,26,29,52,53,54,55,56,57,58,59,60,62,63,65,66,67,],[29,29,29,29,29,29,29,29,29,-46,-47,-48,-49,-50,-51,-52,-53,29,29,29,29,29,]),'INTEGER':([13,14,15,19,20,23,26,29,52,53,54,55,56,57,58,59,60,62,63,65,66,67,],[32,32,32,32,32,32,32,32,32,-46,-47,-48,-49,-50,-51,-52,-53,32,32,32,32,32,]),'STRING':([13,14,15,19,20,23,26,29,52,53,54,55,56,57,58,59,60,62,63,65,66,67,],[33,33,33,33,33,33,33,33,33,-46,-47,-48,-49,-50,-51,-52,-53,33,33,33,33,33,]),'BOOL':([13,14,15,19,20,23,26,29,52,53,54,55,56,57,58,59,60,62,63,65,66,67,],[34,34,34,34,34,34,34,34,34,-46,-47,-48,-49,-50,-51,-52,-53,34,34,34,34,34,]),'THEN':([21,22,24,25,27,28,30,31,32,33,34,61,64,71,72,73,74,75,76,77,],[51,-30,-32,-35,-41,-42,-44,-45,-54,-55,-56,-31,-37,-36,-33,-34,-38,-39,-40,-43,]),'DO':([22,24,25,27,28,30,31,32,33,34,35,61,64,71,72,73,74,75,76,77,],[-30,-32,-35,-41,-42,-44,-45,-54,-55,-56,69,-31,-37,-36,-33,-34,-38,-39,-40,-43,]),'RPAREN':([22,24,25,27,28,30,31,32,33,34,61,64,68,71,72,73,74,75,76,77,],[-30,-32,-35,-41,-42,-44,-45,-54,-55,-56,-31,-37,77,-36,-33,-34,-38,-39,-40,-43,]),'AND':([22,25,27,28,30,31,32,33,34,36,38,39,41,42,44,46,47,49,72,73,74,75,76,77,],[53,-35,-41,-42,-44,-45,-54,-55,-56,-42,-44,-45,-44,-42,-45,-45,-42,-44,-33,-34,-38,-39,-40,-43,]),'OR':([22,25,27,28,30,31,32,33,34,36,38,39,41,42,44,46,47,49,72,73,74,75,76,77,],[54,-35,-41,-42,-44,-45,-54,-55,-56,-42,-44,-45,-44,-42,-45,-45,-42,-44,-33,-34,-38,-39,-40,-43,]),'GT':([22,25,27,28,30,31,32,33,34,36,38,39,41,42,44,46,47,49,72,73,74,75,76,77,],[55,-35,-41,-42,-44,-45,-54,-55,-56,-42,-44,-45,-44,-42,-45,-45,-42,-44,-33,-34,-38,-39,-40,-43,]),'LT':([22,25,27,28,30,31,32,33,34,36,38,39,41,42,44,46,47,49,72,73,74,75,76,77,],[56,-35,-41,-42,-44,-45,-54,-55,-56,-42,-44,-45,-44,-42,-45,-45,-42,-44,-33,-34,-38,-39,-40,-43,]),'GE':([22,25,27,28,30,31,32,33,34,36,38,39,41,42,44,46,47,49,72,73,74,75,76,77,],[57,-35,-41,-42,-44,-45,-54,-55,-56,-42,-44,-45,-44,-42,-45,-45,-42,-44,-33,-34,-38,-39,-40,-43,]),'LE':([22,25,27,28,30,31,32,33,34,36,38,39,41,42,44,46,47,49,72,73,74,75,76,77,],[58,-35,-41,-42,-44,-45,-54,-55,-56,-42,-44,-45,-44,-42,-45,-45,-42,-44,-33,-34,-38,-39,-40,-43,]),'NE':([22,25,27,28,30,31,32,33,34,36,38,39,41,42,44,46,47,49,72,73,74,75,76,77,],[59,-35,-41,-42,-44,-45,-54,-55,-56,-42,-44,-45,-44,-42,-45,-45,-42,-44,-33,-34,-38,-39,-40,-43,]),'EQ':([22,25,27,28,30,31,32,33,34,36,38,39,41,42,44,46,47,49,72,73,74,75,76,77,],[60,-35,-41,-42,-44,-45,-54,-55,-56,-42,-44,-45,-44,-42,-45,-45,-42,-44,-33,-34,-38,-39,-40,-43,]),'PLUS':([25,27,28,30,31,32,33,34,36,38,39,41,42,44,46,47,49,74,75,76,77,],[62,-41,-42,-44,-45,-54,-55,-56,-42,-44,-45,-44,-42,-45,-45,-42,-44,-38,-39,-40,-43,]),'TIMES':([27,28,30,31,32,33,34,36,38,39,41,42,44,46,47,49,77,],[65,-42,-44,-45,-54,-55,-56,-42,-44,-45,-44,-42,-45,-45,-42,-44,-43,]),'DIVIDE':([27,28,30,31,32,33,34,36,38,39,41,42,44,46,47,49,77,],[66,-42,-44,-45,-54,-55,-56,-42,-44,-45,-44,-42,-45,-45,-42,-44,-43,]),'MODULO':([27,28,30,31,32,33,34,36,38,39,41,42,44,46,47,49,77,],[67,-42,-44,-45,-54,-55,-56,-42,-44,-45,-44,-42,-45,-45,-42,-44,-43,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,18,51,69,80,],[1,40,70,78,82,]),'T':([0,3,18,51,69,80,],[2,18,2,2,2,2,]),'statement':([2,],[3,]),'var_declaration':([2,],[5,]),'if_statement':([2,],[6,]),'while_statement':([2,],[7,]),'print_statement':([2,],[8,]),'input_statement':([2,19,20,],[9,45,50,]),'cons_declaration':([2,],[10,]),'expression':([13,14,15,19,20,29,],[21,35,37,43,48,68,]),'math_expression':([13,14,15,19,20,23,26,29,52,62,63,],[22,22,22,22,22,61,64,22,71,72,73,]),'relational_expression':([13,14,15,19,20,29,],[24,24,24,24,24,24,]),'term':([13,14,15,19,20,23,26,29,52,62,63,65,66,67,],[25,25,25,25,25,25,25,25,25,25,25,74,75,76,]),'factor':([13,14,15,19,20,23,26,29,52,62,63,65,66,67,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'lit_value':([13,14,15,19,20,23,26,29,52,62,63,65,66,67,],[28,28,36,42,47,28,28,28,28,28,28,28,28,28,]),'relational_op':([22,],[52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> T statement T statements','statements',4,'p_statements','parser.py',33),
  ('statements -> T statement T','statements',3,'p_statements','parser.py',34),
  ('T -> T NEWLINE','T',2,'p_T','parser.py',39),
  ('T -> <empty>','T',0,'p_T','parser.py',40),
  ('statement -> var_declaration','statement',1,'p_statement','parser.py',46),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',47),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',48),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',49),
  ('statement -> input_statement','statement',1,'p_statement','parser.py',50),
  ('statement -> cons_declaration','statement',1,'p_statement','parser.py',51),
  ('input_statement -> INPUT_I','input_statement',1,'p_input_statement','parser.py',57),
  ('input_statement -> INPUT_S','input_statement',1,'p_input_statement','parser.py',58),
  ('print_statement -> PRINT lit_value','print_statement',2,'p_print_statement','parser.py',64),
  ('print_statement -> PRINT expression','print_statement',2,'p_print_statement','parser.py',65),
  ('print_statement -> PRINT ID','print_statement',2,'p_print_statement','parser.py',66),
  ('print_statement -> PRINT CONSTANT','print_statement',2,'p_print_statement','parser.py',67),
  ('var_declaration -> ID ASS_OP lit_value','var_declaration',3,'p_var_declaration','parser.py',73),
  ('var_declaration -> ID ASS_OP expression','var_declaration',3,'p_var_declaration','parser.py',74),
  ('var_declaration -> ID ASS_OP ID','var_declaration',3,'p_var_declaration','parser.py',75),
  ('var_declaration -> ID ASS_OP CONSTANT','var_declaration',3,'p_var_declaration','parser.py',76),
  ('var_declaration -> ID ASS_OP input_statement','var_declaration',3,'p_var_declaration','parser.py',77),
  ('cons_declaration -> CONSTANT ASS_OP lit_value','cons_declaration',3,'p_cons_declaration','parser.py',83),
  ('cons_declaration -> CONSTANT ASS_OP expression','cons_declaration',3,'p_cons_declaration','parser.py',84),
  ('cons_declaration -> CONSTANT ASS_OP ID','cons_declaration',3,'p_cons_declaration','parser.py',85),
  ('cons_declaration -> CONSTANT ASS_OP CONSTANT','cons_declaration',3,'p_cons_declaration','parser.py',86),
  ('cons_declaration -> CONSTANT ASS_OP input_statement','cons_declaration',3,'p_cons_declaration','parser.py',87),
  ('if_statement -> IF expression THEN statements END','if_statement',5,'p_if_statement','parser.py',93),
  ('if_statement -> IF expression THEN statements ELSE statements END','if_statement',7,'p_if_statement','parser.py',94),
  ('while_statement -> WHILE expression DO statements END','while_statement',5,'p_while_statement','parser.py',100),
  ('expression -> math_expression','expression',1,'p_expression','parser.py',106),
  ('expression -> MINUS math_expression','expression',2,'p_expression','parser.py',107),
  ('expression -> relational_expression','expression',1,'p_expression','parser.py',108),
  ('math_expression -> term PLUS math_expression','math_expression',3,'p_math_expression','parser.py',114),
  ('math_expression -> term MINUS math_expression','math_expression',3,'p_math_expression','parser.py',115),
  ('math_expression -> term','math_expression',1,'p_math_expression','parser.py',116),
  ('relational_expression -> math_expression relational_op math_expression','relational_expression',3,'p_relational_expression','parser.py',122),
  ('relational_expression -> NOT math_expression','relational_expression',2,'p_relational_expression','parser.py',123),
  ('term -> factor TIMES term','term',3,'p_term','parser.py',129),
  ('term -> factor DIVIDE term','term',3,'p_term','parser.py',130),
  ('term -> factor MODULO term','term',3,'p_term','parser.py',131),
  ('term -> factor','term',1,'p_term','parser.py',132),
  ('factor -> lit_value','factor',1,'p_factor','parser.py',138),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',139),
  ('factor -> ID','factor',1,'p_factor','parser.py',140),
  ('factor -> CONSTANT','factor',1,'p_factor','parser.py',141),
  ('relational_op -> AND','relational_op',1,'p_relational_op','parser.py',147),
  ('relational_op -> OR','relational_op',1,'p_relational_op','parser.py',148),
  ('relational_op -> GT','relational_op',1,'p_relational_op','parser.py',149),
  ('relational_op -> LT','relational_op',1,'p_relational_op','parser.py',150),
  ('relational_op -> GE','relational_op',1,'p_relational_op','parser.py',151),
  ('relational_op -> LE','relational_op',1,'p_relational_op','parser.py',152),
  ('relational_op -> NE','relational_op',1,'p_relational_op','parser.py',153),
  ('relational_op -> EQ','relational_op',1,'p_relational_op','parser.py',154),
  ('lit_value -> INTEGER','lit_value',1,'p_lit_value','parser.py',160),
  ('lit_value -> STRING','lit_value',1,'p_lit_value','parser.py',161),
  ('lit_value -> BOOL','lit_value',1,'p_lit_value','parser.py',162),
]
