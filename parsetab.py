
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASS_OP BOOL CONSTANT DIVIDE DO ELSE END EQ GE GT ID IF INPUT_I INPUT_S INTEGER LE LPAREN LT MINUS MODULO NE NOT OR PLUS PRINT RPAREN STRING THEN TIMES WHILEprogram : statements\n    statements : statement statements\t\n                    | statement \n    \n    statement   : var_declaration \n                | if_statement\n                | while_statement\n                | print_statement\n                | input_statement\n                | cons_declaration\n    \n    input_statement : INPUT_I\n                    | INPUT_S\n    \n    print_statement : PRINT factor \n                    | PRINT expression \n\n    \n    var_declaration : ID ASS_OP factor \n                    | ID ASS_OP expression \n                    | ID ASS_OP ID \n                    | ID ASS_OP CONSTANT \n                    | ID ASS_OP input_statement \n    \n    cons_declaration : CONSTANT ASS_OP factor \n                    | CONSTANT ASS_OP expression \n                    | CONSTANT ASS_OP ID \n                    | CONSTANT ASS_OP CONSTANT\n                    | CONSTANT ASS_OP input_statement \n    \n    if_statement : IF expression THEN statements END\n                         | IF expression THEN statements ELSE statements END\n    \n    while_statement : WHILE expression DO statements END\n    \n    expression      : math_expression\n                    | MINUS math_expression\n                    | relational_expression\n    \n\n    math_expression : math_expression PLUS term  \n                    | math_expression MINUS term\n                    | term \n    \n    term    : factor TIMES term\n            | factor DIVIDE term\n            | factor MODULO term\n            | factor\n    \n    relational_expression : math_expression AND math_expression\n                        | math_expression OR math_expression \n                        | math_expression GT math_expression \n                        | math_expression LT math_expression \n                        | math_expression GE math_expression \n                        | math_expression LE math_expression\n                        | math_expression NE math_expression\n                        | math_expression EQ math_expression \n                        | NOT math_expression\n    \n    factor : INTEGER\n            | STRING\n            | BOOL\n            | ID\n            | CONSTANT\n            | LPAREN expression RPAREN\n\n    '
    
_lr_action_items = {'ID':([0,3,4,5,6,7,8,9,12,13,14,15,16,18,19,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,],[10,10,-4,-5,-6,-7,-8,-9,30,30,30,-10,-11,36,44,-27,30,-29,-32,30,-36,-46,-47,-48,-49,-50,30,-12,-13,-16,-14,-15,-17,-18,-22,-19,-20,-21,-23,10,30,30,30,30,30,30,30,30,30,30,-28,-45,30,30,30,10,-30,-31,-37,-38,-39,-40,-41,-42,-43,-44,-33,-34,-35,-51,-24,10,-26,-25,]),'IF':([0,3,4,5,6,7,8,9,15,16,21,23,24,26,27,28,29,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,57,58,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,],[12,12,-4,-5,-6,-7,-8,-9,-10,-11,-27,-29,-32,-36,-46,-47,-48,-49,-50,-12,-13,-16,-14,-15,-17,-18,-22,-19,-20,-21,-23,12,-28,-45,12,-30,-31,-37,-38,-39,-40,-41,-42,-43,-44,-33,-34,-35,-51,-24,12,-26,-25,]),'WHILE':([0,3,4,5,6,7,8,9,15,16,21,23,24,26,27,28,29,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,57,58,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,],[13,13,-4,-5,-6,-7,-8,-9,-10,-11,-27,-29,-32,-36,-46,-47,-48,-49,-50,-12,-13,-16,-14,-15,-17,-18,-22,-19,-20,-21,-23,13,-28,-45,13,-30,-31,-37,-38,-39,-40,-41,-42,-43,-44,-33,-34,-35,-51,-24,13,-26,-25,]),'PRINT':([0,3,4,5,6,7,8,9,15,16,21,23,24,26,27,28,29,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,57,58,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,],[14,14,-4,-5,-6,-7,-8,-9,-10,-11,-27,-29,-32,-36,-46,-47,-48,-49,-50,-12,-13,-16,-14,-15,-17,-18,-22,-19,-20,-21,-23,14,-28,-45,14,-30,-31,-37,-38,-39,-40,-41,-42,-43,-44,-33,-34,-35,-51,-24,14,-26,-25,]),'INPUT_I':([0,3,4,5,6,7,8,9,15,16,18,19,21,23,24,26,27,28,29,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,57,58,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,],[15,15,-4,-5,-6,-7,-8,-9,-10,-11,15,15,-27,-29,-32,-36,-46,-47,-48,-49,-50,-12,-13,-16,-14,-15,-17,-18,-22,-19,-20,-21,-23,15,-28,-45,15,-30,-31,-37,-38,-39,-40,-41,-42,-43,-44,-33,-34,-35,-51,-24,15,-26,-25,]),'INPUT_S':([0,3,4,5,6,7,8,9,15,16,18,19,21,23,24,26,27,28,29,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,57,58,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,],[16,16,-4,-5,-6,-7,-8,-9,-10,-11,16,16,-27,-29,-32,-36,-46,-47,-48,-49,-50,-12,-13,-16,-14,-15,-17,-18,-22,-19,-20,-21,-23,16,-28,-45,16,-30,-31,-37,-38,-39,-40,-41,-42,-43,-44,-33,-34,-35,-51,-24,16,-26,-25,]),'CONSTANT':([0,3,4,5,6,7,8,9,12,13,14,15,16,18,19,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,],[11,11,-4,-5,-6,-7,-8,-9,31,31,31,-10,-11,39,41,-27,31,-29,-32,31,-36,-46,-47,-48,-49,-50,31,-12,-13,-16,-14,-15,-17,-18,-22,-19,-20,-21,-23,11,31,31,31,31,31,31,31,31,31,31,-28,-45,31,31,31,11,-30,-31,-37,-38,-39,-40,-41,-42,-43,-44,-33,-34,-35,-51,-24,11,-26,-25,]),'$end':([1,2,3,4,5,6,7,8,9,15,16,17,21,23,24,26,27,28,29,30,31,34,35,36,37,38,39,40,41,42,43,44,45,57,58,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,84,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-27,-29,-32,-36,-46,-47,-48,-49,-50,-12,-13,-16,-14,-15,-17,-18,-22,-19,-20,-21,-23,-28,-45,-30,-31,-37,-38,-39,-40,-41,-42,-43,-44,-33,-34,-35,-51,-24,-26,-25,]),'END':([3,4,5,6,7,8,9,15,16,17,21,23,24,26,27,28,29,30,31,34,35,36,37,38,39,40,41,42,43,44,45,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-27,-29,-32,-36,-46,-47,-48,-49,-50,-12,-13,-16,-14,-15,-17,-18,-22,-19,-20,-21,-23,-28,-45,80,-30,-31,-37,-38,-39,-40,-41,-42,-43,-44,-33,-34,-35,-51,82,-24,-26,84,-25,]),'ELSE':([3,4,5,6,7,8,9,15,16,17,21,23,24,26,27,28,29,30,31,34,35,36,37,38,39,40,41,42,43,44,45,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,84,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-27,-29,-32,-36,-46,-47,-48,-49,-50,-12,-13,-16,-14,-15,-17,-18,-22,-19,-20,-21,-23,-28,-45,81,-30,-31,-37,-38,-39,-40,-41,-42,-43,-44,-33,-34,-35,-51,-24,-26,-25,]),'ASS_OP':([10,11,],[18,19,]),'MINUS':([12,13,14,18,19,21,24,26,27,28,29,30,31,32,34,36,37,39,41,42,44,57,58,65,66,67,68,69,70,71,72,73,74,75,76,77,78,],[22,22,22,22,22,48,-32,-36,-46,-47,-48,-49,-50,22,-36,-49,-36,-50,-50,-36,-49,48,48,-30,-31,48,48,48,48,48,48,48,48,-33,-34,-35,-51,]),'NOT':([12,13,14,18,19,32,],[25,25,25,25,25,25,]),'INTEGER':([12,13,14,18,19,22,25,32,47,48,49,50,51,52,53,54,55,56,59,60,61,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'STRING':([12,13,14,18,19,22,25,32,47,48,49,50,51,52,53,54,55,56,59,60,61,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'BOOL':([12,13,14,18,19,22,25,32,47,48,49,50,51,52,53,54,55,56,59,60,61,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'LPAREN':([12,13,14,18,19,22,25,32,47,48,49,50,51,52,53,54,55,56,59,60,61,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'THEN':([20,21,23,24,26,27,28,29,30,31,57,58,65,66,67,68,69,70,71,72,73,74,75,76,77,78,],[46,-27,-29,-32,-36,-46,-47,-48,-49,-50,-28,-45,-30,-31,-37,-38,-39,-40,-41,-42,-43,-44,-33,-34,-35,-51,]),'DO':([21,23,24,26,27,28,29,30,31,33,57,58,65,66,67,68,69,70,71,72,73,74,75,76,77,78,],[-27,-29,-32,-36,-46,-47,-48,-49,-50,63,-28,-45,-30,-31,-37,-38,-39,-40,-41,-42,-43,-44,-33,-34,-35,-51,]),'RPAREN':([21,23,24,26,27,28,29,30,31,57,58,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,],[-27,-29,-32,-36,-46,-47,-48,-49,-50,-28,-45,78,-30,-31,-37,-38,-39,-40,-41,-42,-43,-44,-33,-34,-35,-51,]),'PLUS':([21,24,26,27,28,29,30,31,34,36,37,39,41,42,44,57,58,65,66,67,68,69,70,71,72,73,74,75,76,77,78,],[47,-32,-36,-46,-47,-48,-49,-50,-36,-49,-36,-50,-50,-36,-49,47,47,-30,-31,47,47,47,47,47,47,47,47,-33,-34,-35,-51,]),'AND':([21,24,26,27,28,29,30,31,34,36,37,39,41,42,44,65,66,75,76,77,78,],[49,-32,-36,-46,-47,-48,-49,-50,-36,-49,-36,-50,-50,-36,-49,-30,-31,-33,-34,-35,-51,]),'OR':([21,24,26,27,28,29,30,31,34,36,37,39,41,42,44,65,66,75,76,77,78,],[50,-32,-36,-46,-47,-48,-49,-50,-36,-49,-36,-50,-50,-36,-49,-30,-31,-33,-34,-35,-51,]),'GT':([21,24,26,27,28,29,30,31,34,36,37,39,41,42,44,65,66,75,76,77,78,],[51,-32,-36,-46,-47,-48,-49,-50,-36,-49,-36,-50,-50,-36,-49,-30,-31,-33,-34,-35,-51,]),'LT':([21,24,26,27,28,29,30,31,34,36,37,39,41,42,44,65,66,75,76,77,78,],[52,-32,-36,-46,-47,-48,-49,-50,-36,-49,-36,-50,-50,-36,-49,-30,-31,-33,-34,-35,-51,]),'GE':([21,24,26,27,28,29,30,31,34,36,37,39,41,42,44,65,66,75,76,77,78,],[53,-32,-36,-46,-47,-48,-49,-50,-36,-49,-36,-50,-50,-36,-49,-30,-31,-33,-34,-35,-51,]),'LE':([21,24,26,27,28,29,30,31,34,36,37,39,41,42,44,65,66,75,76,77,78,],[54,-32,-36,-46,-47,-48,-49,-50,-36,-49,-36,-50,-50,-36,-49,-30,-31,-33,-34,-35,-51,]),'NE':([21,24,26,27,28,29,30,31,34,36,37,39,41,42,44,65,66,75,76,77,78,],[55,-32,-36,-46,-47,-48,-49,-50,-36,-49,-36,-50,-50,-36,-49,-30,-31,-33,-34,-35,-51,]),'EQ':([21,24,26,27,28,29,30,31,34,36,37,39,41,42,44,65,66,75,76,77,78,],[56,-32,-36,-46,-47,-48,-49,-50,-36,-49,-36,-50,-50,-36,-49,-30,-31,-33,-34,-35,-51,]),'TIMES':([26,27,28,29,30,31,34,36,37,39,41,42,44,78,],[59,-46,-47,-48,-49,-50,59,-49,59,-50,-50,59,-49,-51,]),'DIVIDE':([26,27,28,29,30,31,34,36,37,39,41,42,44,78,],[60,-46,-47,-48,-49,-50,60,-49,60,-50,-50,60,-49,-51,]),'MODULO':([26,27,28,29,30,31,34,36,37,39,41,42,44,78,],[61,-46,-47,-48,-49,-50,61,-49,61,-50,-50,61,-49,-51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,3,46,63,81,],[2,17,64,79,83,]),'statement':([0,3,46,63,81,],[3,3,3,3,3,]),'var_declaration':([0,3,46,63,81,],[4,4,4,4,4,]),'if_statement':([0,3,46,63,81,],[5,5,5,5,5,]),'while_statement':([0,3,46,63,81,],[6,6,6,6,6,]),'print_statement':([0,3,46,63,81,],[7,7,7,7,7,]),'input_statement':([0,3,18,19,46,63,81,],[8,8,40,45,8,8,8,]),'cons_declaration':([0,3,46,63,81,],[9,9,9,9,9,]),'expression':([12,13,14,18,19,32,],[20,33,35,38,43,62,]),'math_expression':([12,13,14,18,19,22,25,32,49,50,51,52,53,54,55,56,],[21,21,21,21,21,57,58,21,67,68,69,70,71,72,73,74,]),'relational_expression':([12,13,14,18,19,32,],[23,23,23,23,23,23,]),'term':([12,13,14,18,19,22,25,32,47,48,49,50,51,52,53,54,55,56,59,60,61,],[24,24,24,24,24,24,24,24,65,66,24,24,24,24,24,24,24,24,75,76,77,]),'factor':([12,13,14,18,19,22,25,32,47,48,49,50,51,52,53,54,55,56,59,60,61,],[26,26,34,37,42,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',39),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',47),
  ('statements -> statement','statements',1,'p_statements','parser.py',48),
  ('statement -> var_declaration','statement',1,'p_statement','parser.py',65),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',66),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',67),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',68),
  ('statement -> input_statement','statement',1,'p_statement','parser.py',69),
  ('statement -> cons_declaration','statement',1,'p_statement','parser.py',70),
  ('input_statement -> INPUT_I','input_statement',1,'p_input_statement','parser.py',80),
  ('input_statement -> INPUT_S','input_statement',1,'p_input_statement','parser.py',81),
  ('print_statement -> PRINT factor','print_statement',2,'p_print_statement','parser.py',90),
  ('print_statement -> PRINT expression','print_statement',2,'p_print_statement','parser.py',91),
  ('var_declaration -> ID ASS_OP factor','var_declaration',3,'p_var_declaration','parser.py',101),
  ('var_declaration -> ID ASS_OP expression','var_declaration',3,'p_var_declaration','parser.py',102),
  ('var_declaration -> ID ASS_OP ID','var_declaration',3,'p_var_declaration','parser.py',103),
  ('var_declaration -> ID ASS_OP CONSTANT','var_declaration',3,'p_var_declaration','parser.py',104),
  ('var_declaration -> ID ASS_OP input_statement','var_declaration',3,'p_var_declaration','parser.py',105),
  ('cons_declaration -> CONSTANT ASS_OP factor','cons_declaration',3,'p_cons_declaration','parser.py',113),
  ('cons_declaration -> CONSTANT ASS_OP expression','cons_declaration',3,'p_cons_declaration','parser.py',114),
  ('cons_declaration -> CONSTANT ASS_OP ID','cons_declaration',3,'p_cons_declaration','parser.py',115),
  ('cons_declaration -> CONSTANT ASS_OP CONSTANT','cons_declaration',3,'p_cons_declaration','parser.py',116),
  ('cons_declaration -> CONSTANT ASS_OP input_statement','cons_declaration',3,'p_cons_declaration','parser.py',117),
  ('if_statement -> IF expression THEN statements END','if_statement',5,'p_if_statement','parser.py',126),
  ('if_statement -> IF expression THEN statements ELSE statements END','if_statement',7,'p_if_statement','parser.py',127),
  ('while_statement -> WHILE expression DO statements END','while_statement',5,'p_while_statement','parser.py',142),
  ('expression -> math_expression','expression',1,'p_expression','parser.py',152),
  ('expression -> MINUS math_expression','expression',2,'p_expression','parser.py',153),
  ('expression -> relational_expression','expression',1,'p_expression','parser.py',154),
  ('math_expression -> math_expression PLUS term','math_expression',3,'p_math_expression','parser.py',167),
  ('math_expression -> math_expression MINUS term','math_expression',3,'p_math_expression','parser.py',168),
  ('math_expression -> term','math_expression',1,'p_math_expression','parser.py',169),
  ('term -> factor TIMES term','term',3,'p_term','parser.py',180),
  ('term -> factor DIVIDE term','term',3,'p_term','parser.py',181),
  ('term -> factor MODULO term','term',3,'p_term','parser.py',182),
  ('term -> factor','term',1,'p_term','parser.py',183),
  ('relational_expression -> math_expression AND math_expression','relational_expression',3,'p_relational_expression','parser.py',195),
  ('relational_expression -> math_expression OR math_expression','relational_expression',3,'p_relational_expression','parser.py',196),
  ('relational_expression -> math_expression GT math_expression','relational_expression',3,'p_relational_expression','parser.py',197),
  ('relational_expression -> math_expression LT math_expression','relational_expression',3,'p_relational_expression','parser.py',198),
  ('relational_expression -> math_expression GE math_expression','relational_expression',3,'p_relational_expression','parser.py',199),
  ('relational_expression -> math_expression LE math_expression','relational_expression',3,'p_relational_expression','parser.py',200),
  ('relational_expression -> math_expression NE math_expression','relational_expression',3,'p_relational_expression','parser.py',201),
  ('relational_expression -> math_expression EQ math_expression','relational_expression',3,'p_relational_expression','parser.py',202),
  ('relational_expression -> NOT math_expression','relational_expression',2,'p_relational_expression','parser.py',203),
  ('factor -> INTEGER','factor',1,'p_factor','parser.py',217),
  ('factor -> STRING','factor',1,'p_factor','parser.py',218),
  ('factor -> BOOL','factor',1,'p_factor','parser.py',219),
  ('factor -> ID','factor',1,'p_factor','parser.py',220),
  ('factor -> CONSTANT','factor',1,'p_factor','parser.py',221),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',222),
]
