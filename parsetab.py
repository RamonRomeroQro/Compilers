
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASS_OP BOOL CONSTANT DIVIDE DO ELSE END EQ GE GT ID IF INPUT_I INPUT_S INTEGER LE LPAREN LT MINUS MODULO NE NEWLINE NOT OR PLUS PRINT RPAREN SEMICOLON STRING THEN TIMES WHILEprogram : statements\n\tstatements : T statement T statements\t\n        | T statement T \n        T : T NEWLINE\n    |\n    \n    statement   : var_declaration \n                | if_statement\n                | while_statement\n                | print_statement\n                | input_statement\n                | cons_declaration\n    \n    input_statement : INPUT_I\n                    | INPUT_S\n    \n    print_statement : PRINT lit_value \n                    | PRINT expression \n                    | PRINT ID \n                    | PRINT CONSTANT \n    \n    var_declaration : ID ASS_OP lit_value \n                    | ID ASS_OP expression \n                    | ID ASS_OP ID \n                    | ID ASS_OP CONSTANT \n                    | ID ASS_OP input_statement \n    \n    cons_declaration : CONSTANT ASS_OP lit_value \n                    | CONSTANT ASS_OP expression \n                    | CONSTANT ASS_OP ID \n                    | CONSTANT ASS_OP CONSTANT\n                    | CONSTANT ASS_OP input_statement \n    \n    if_statement : IF expression THEN statements END\n                         | IF expression THEN statements ELSE statements END\n    \n    while_statement : WHILE expression DO statements END\n    \n    expression      : math_expression\n                    | MINUS math_expression\n                            | relational_expression\n    \n    math_expression : term PLUS math_expression\n                    | term MINUS math_expression\n                    | term \n    \n    relational_expression : math_expression relational_op math_expression\n                          | NOT math_expression\n    \n    term    : factor TIMES term\n            | factor DIVIDE term\n            | factor MODULO term\n            | factor\n    \n    factor : lit_value\n            | LPAREN expression RPAREN\n            | ID\n            | CONSTANT\n    \n    relational_op   : AND \n                    | OR \n                    | GT \n                    | LT \n                    | GE \n                    | LE\n                    | NE\n                    | EQ \n    \n    lit_value   : INTEGER \n                | STRING \n                | BOOL \n    '
    
_lr_action_items = {'NEWLINE':([0,3,4,5,6,7,8,9,10,11,17,18,19,23,25,26,28,29,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,62,65,70,72,73,74,75,76,77,78,80,81,82,84,],[-5,5,-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,5,-31,-33,-36,-42,-43,-45,-46,-55,-56,-57,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,-32,-38,-5,-37,-34,-35,-39,-40,-41,-44,-28,-5,-30,-29,]),'ID':([0,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,80,81,82,84,],[-5,12,-5,-4,-6,-7,-8,-9,-10,-11,31,31,39,-12,-13,-5,42,50,-31,31,-33,-36,31,-42,-43,31,-45,-46,-55,-56,-57,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,31,-47,-48,-49,-50,-51,-52,-53,-54,-32,31,31,-38,31,31,31,-5,-37,-34,-35,-39,-40,-41,-44,-28,-5,-30,-29,]),'IF':([0,3,4,5,6,7,8,9,10,11,17,18,19,23,25,26,28,29,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,62,65,70,72,73,74,75,76,77,78,80,81,82,84,],[-5,14,-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-5,-31,-33,-36,-42,-43,-45,-46,-55,-56,-57,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,-32,-38,-5,-37,-34,-35,-39,-40,-41,-44,-28,-5,-30,-29,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,17,18,19,23,25,26,28,29,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,62,65,70,72,73,74,75,76,77,78,80,81,82,84,],[-5,15,-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-5,-31,-33,-36,-42,-43,-45,-46,-55,-56,-57,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,-32,-38,-5,-37,-34,-35,-39,-40,-41,-44,-28,-5,-30,-29,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,17,18,19,23,25,26,28,29,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,62,65,70,72,73,74,75,76,77,78,80,81,82,84,],[-5,16,-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-5,-31,-33,-36,-42,-43,-45,-46,-55,-56,-57,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,-32,-38,-5,-37,-34,-35,-39,-40,-41,-44,-28,-5,-30,-29,]),'INPUT_I':([0,3,4,5,6,7,8,9,10,11,17,18,19,20,21,23,25,26,28,29,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,62,65,70,72,73,74,75,76,77,78,80,81,82,84,],[-5,17,-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-5,17,17,-31,-33,-36,-42,-43,-45,-46,-55,-56,-57,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,-32,-38,-5,-37,-34,-35,-39,-40,-41,-44,-28,-5,-30,-29,]),'INPUT_S':([0,3,4,5,6,7,8,9,10,11,17,18,19,20,21,23,25,26,28,29,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,62,65,70,72,73,74,75,76,77,78,80,81,82,84,],[-5,18,-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-5,18,18,-31,-33,-36,-42,-43,-45,-46,-55,-56,-57,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,-32,-38,-5,-37,-34,-35,-39,-40,-41,-44,-28,-5,-30,-29,]),'CONSTANT':([0,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,80,81,82,84,],[-5,13,-5,-4,-6,-7,-8,-9,-10,-11,32,32,40,-12,-13,-5,45,47,-31,32,-33,-36,32,-42,-43,32,-45,-46,-55,-56,-57,-14,-15,-16,-17,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-5,32,-47,-48,-49,-50,-51,-52,-53,-54,-32,32,32,-38,32,32,32,-5,-37,-34,-35,-39,-40,-41,-44,-28,-5,-30,-29,]),'$end':([1,2,4,5,6,7,8,9,10,11,17,18,19,23,25,26,28,29,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,62,65,72,73,74,75,76,77,78,80,82,84,],[0,-1,-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-3,-31,-33,-36,-42,-43,-45,-46,-55,-56,-57,-14,-15,-16,-17,-2,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-32,-38,-37,-34,-35,-39,-40,-41,-44,-28,-30,-29,]),'END':([4,5,6,7,8,9,10,11,17,18,19,23,25,26,28,29,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,62,65,71,72,73,74,75,76,77,78,79,80,82,83,84,],[-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-3,-31,-33,-36,-42,-43,-45,-46,-55,-56,-57,-14,-15,-16,-17,-2,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-32,-38,80,-37,-34,-35,-39,-40,-41,-44,82,-28,-30,84,-29,]),'ELSE':([4,5,6,7,8,9,10,11,17,18,19,23,25,26,28,29,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,62,65,71,72,73,74,75,76,77,78,80,82,84,],[-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-3,-31,-33,-36,-42,-43,-45,-46,-55,-56,-57,-14,-15,-16,-17,-2,-20,-18,-19,-21,-22,-26,-23,-24,-25,-27,-32,-38,81,-37,-34,-35,-39,-40,-41,-44,-28,-30,-29,]),'ASS_OP':([12,13,],[20,21,]),'MINUS':([14,15,16,20,21,26,28,29,30,31,32,33,34,35,37,39,40,42,43,45,47,48,50,75,76,77,78,],[24,24,24,24,24,64,-42,-43,24,-45,-46,-55,-56,-57,-43,-45,-46,-45,-43,-46,-46,-43,-45,-39,-40,-41,-44,]),'NOT':([14,15,16,20,21,30,],[27,27,27,27,27,27,]),'LPAREN':([14,15,16,20,21,24,27,30,53,54,55,56,57,58,59,60,61,63,64,66,67,68,],[30,30,30,30,30,30,30,30,30,-47,-48,-49,-50,-51,-52,-53,-54,30,30,30,30,30,]),'INTEGER':([14,15,16,20,21,24,27,30,53,54,55,56,57,58,59,60,61,63,64,66,67,68,],[33,33,33,33,33,33,33,33,33,-47,-48,-49,-50,-51,-52,-53,-54,33,33,33,33,33,]),'STRING':([14,15,16,20,21,24,27,30,53,54,55,56,57,58,59,60,61,63,64,66,67,68,],[34,34,34,34,34,34,34,34,34,-47,-48,-49,-50,-51,-52,-53,-54,34,34,34,34,34,]),'BOOL':([14,15,16,20,21,24,27,30,53,54,55,56,57,58,59,60,61,63,64,66,67,68,],[35,35,35,35,35,35,35,35,35,-47,-48,-49,-50,-51,-52,-53,-54,35,35,35,35,35,]),'THEN':([22,23,25,26,28,29,31,32,33,34,35,62,65,72,73,74,75,76,77,78,],[52,-31,-33,-36,-42,-43,-45,-46,-55,-56,-57,-32,-38,-37,-34,-35,-39,-40,-41,-44,]),'DO':([23,25,26,28,29,31,32,33,34,35,36,62,65,72,73,74,75,76,77,78,],[-31,-33,-36,-42,-43,-45,-46,-55,-56,-57,70,-32,-38,-37,-34,-35,-39,-40,-41,-44,]),'RPAREN':([23,25,26,28,29,31,32,33,34,35,62,65,69,72,73,74,75,76,77,78,],[-31,-33,-36,-42,-43,-45,-46,-55,-56,-57,-32,-38,78,-37,-34,-35,-39,-40,-41,-44,]),'AND':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,73,74,75,76,77,78,],[54,-36,-42,-43,-45,-46,-55,-56,-57,-43,-45,-46,-45,-43,-46,-46,-43,-45,-34,-35,-39,-40,-41,-44,]),'OR':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,73,74,75,76,77,78,],[55,-36,-42,-43,-45,-46,-55,-56,-57,-43,-45,-46,-45,-43,-46,-46,-43,-45,-34,-35,-39,-40,-41,-44,]),'GT':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,73,74,75,76,77,78,],[56,-36,-42,-43,-45,-46,-55,-56,-57,-43,-45,-46,-45,-43,-46,-46,-43,-45,-34,-35,-39,-40,-41,-44,]),'LT':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,73,74,75,76,77,78,],[57,-36,-42,-43,-45,-46,-55,-56,-57,-43,-45,-46,-45,-43,-46,-46,-43,-45,-34,-35,-39,-40,-41,-44,]),'GE':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,73,74,75,76,77,78,],[58,-36,-42,-43,-45,-46,-55,-56,-57,-43,-45,-46,-45,-43,-46,-46,-43,-45,-34,-35,-39,-40,-41,-44,]),'LE':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,73,74,75,76,77,78,],[59,-36,-42,-43,-45,-46,-55,-56,-57,-43,-45,-46,-45,-43,-46,-46,-43,-45,-34,-35,-39,-40,-41,-44,]),'NE':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,73,74,75,76,77,78,],[60,-36,-42,-43,-45,-46,-55,-56,-57,-43,-45,-46,-45,-43,-46,-46,-43,-45,-34,-35,-39,-40,-41,-44,]),'EQ':([23,26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,73,74,75,76,77,78,],[61,-36,-42,-43,-45,-46,-55,-56,-57,-43,-45,-46,-45,-43,-46,-46,-43,-45,-34,-35,-39,-40,-41,-44,]),'PLUS':([26,28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,75,76,77,78,],[63,-42,-43,-45,-46,-55,-56,-57,-43,-45,-46,-45,-43,-46,-46,-43,-45,-39,-40,-41,-44,]),'TIMES':([28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,78,],[66,-43,-45,-46,-55,-56,-57,-43,-45,-46,-45,-43,-46,-46,-43,-45,-44,]),'DIVIDE':([28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,78,],[67,-43,-45,-46,-55,-56,-57,-43,-45,-46,-45,-43,-46,-46,-43,-45,-44,]),'MODULO':([28,29,31,32,33,34,35,37,39,40,42,43,45,47,48,50,78,],[68,-43,-45,-46,-55,-56,-57,-43,-45,-46,-45,-43,-46,-46,-43,-45,-44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,19,52,70,81,],[2,41,71,79,83,]),'T':([0,4,19,52,70,81,],[3,19,3,3,3,3,]),'statement':([3,],[4,]),'var_declaration':([3,],[6,]),'if_statement':([3,],[7,]),'while_statement':([3,],[8,]),'print_statement':([3,],[9,]),'input_statement':([3,20,21,],[10,46,51,]),'cons_declaration':([3,],[11,]),'expression':([14,15,16,20,21,30,],[22,36,38,44,49,69,]),'math_expression':([14,15,16,20,21,24,27,30,53,63,64,],[23,23,23,23,23,62,65,23,72,73,74,]),'relational_expression':([14,15,16,20,21,30,],[25,25,25,25,25,25,]),'term':([14,15,16,20,21,24,27,30,53,63,64,66,67,68,],[26,26,26,26,26,26,26,26,26,26,26,75,76,77,]),'factor':([14,15,16,20,21,24,27,30,53,63,64,66,67,68,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'lit_value':([14,15,16,20,21,24,27,30,53,63,64,66,67,68,],[29,29,37,43,48,29,29,29,29,29,29,29,29,29,]),'relational_op':([23,],[53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',32),
  ('statements -> T statement T statements','statements',4,'p_statements','parser.py',36),
  ('statements -> T statement T','statements',3,'p_statements','parser.py',37),
  ('T -> T NEWLINE','T',2,'p_T','parser.py',42),
  ('T -> <empty>','T',0,'p_T','parser.py',43),
  ('statement -> var_declaration','statement',1,'p_statement','parser.py',49),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',50),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',51),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',52),
  ('statement -> input_statement','statement',1,'p_statement','parser.py',53),
  ('statement -> cons_declaration','statement',1,'p_statement','parser.py',54),
  ('input_statement -> INPUT_I','input_statement',1,'p_input_statement','parser.py',60),
  ('input_statement -> INPUT_S','input_statement',1,'p_input_statement','parser.py',61),
  ('print_statement -> PRINT lit_value','print_statement',2,'p_print_statement','parser.py',67),
  ('print_statement -> PRINT expression','print_statement',2,'p_print_statement','parser.py',68),
  ('print_statement -> PRINT ID','print_statement',2,'p_print_statement','parser.py',69),
  ('print_statement -> PRINT CONSTANT','print_statement',2,'p_print_statement','parser.py',70),
  ('var_declaration -> ID ASS_OP lit_value','var_declaration',3,'p_var_declaration','parser.py',76),
  ('var_declaration -> ID ASS_OP expression','var_declaration',3,'p_var_declaration','parser.py',77),
  ('var_declaration -> ID ASS_OP ID','var_declaration',3,'p_var_declaration','parser.py',78),
  ('var_declaration -> ID ASS_OP CONSTANT','var_declaration',3,'p_var_declaration','parser.py',79),
  ('var_declaration -> ID ASS_OP input_statement','var_declaration',3,'p_var_declaration','parser.py',80),
  ('cons_declaration -> CONSTANT ASS_OP lit_value','cons_declaration',3,'p_cons_declaration','parser.py',86),
  ('cons_declaration -> CONSTANT ASS_OP expression','cons_declaration',3,'p_cons_declaration','parser.py',87),
  ('cons_declaration -> CONSTANT ASS_OP ID','cons_declaration',3,'p_cons_declaration','parser.py',88),
  ('cons_declaration -> CONSTANT ASS_OP CONSTANT','cons_declaration',3,'p_cons_declaration','parser.py',89),
  ('cons_declaration -> CONSTANT ASS_OP input_statement','cons_declaration',3,'p_cons_declaration','parser.py',90),
  ('if_statement -> IF expression THEN statements END','if_statement',5,'p_if_statement','parser.py',96),
  ('if_statement -> IF expression THEN statements ELSE statements END','if_statement',7,'p_if_statement','parser.py',97),
  ('while_statement -> WHILE expression DO statements END','while_statement',5,'p_while_statement','parser.py',103),
  ('expression -> math_expression','expression',1,'p_expression','parser.py',109),
  ('expression -> MINUS math_expression','expression',2,'p_expression','parser.py',110),
  ('expression -> relational_expression','expression',1,'p_expression','parser.py',111),
  ('math_expression -> term PLUS math_expression','math_expression',3,'p_math_expression','parser.py',117),
  ('math_expression -> term MINUS math_expression','math_expression',3,'p_math_expression','parser.py',118),
  ('math_expression -> term','math_expression',1,'p_math_expression','parser.py',119),
  ('relational_expression -> math_expression relational_op math_expression','relational_expression',3,'p_relational_expression','parser.py',125),
  ('relational_expression -> NOT math_expression','relational_expression',2,'p_relational_expression','parser.py',126),
  ('term -> factor TIMES term','term',3,'p_term','parser.py',132),
  ('term -> factor DIVIDE term','term',3,'p_term','parser.py',133),
  ('term -> factor MODULO term','term',3,'p_term','parser.py',134),
  ('term -> factor','term',1,'p_term','parser.py',135),
  ('factor -> lit_value','factor',1,'p_factor','parser.py',141),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',142),
  ('factor -> ID','factor',1,'p_factor','parser.py',143),
  ('factor -> CONSTANT','factor',1,'p_factor','parser.py',144),
  ('relational_op -> AND','relational_op',1,'p_relational_op','parser.py',150),
  ('relational_op -> OR','relational_op',1,'p_relational_op','parser.py',151),
  ('relational_op -> GT','relational_op',1,'p_relational_op','parser.py',152),
  ('relational_op -> LT','relational_op',1,'p_relational_op','parser.py',153),
  ('relational_op -> GE','relational_op',1,'p_relational_op','parser.py',154),
  ('relational_op -> LE','relational_op',1,'p_relational_op','parser.py',155),
  ('relational_op -> NE','relational_op',1,'p_relational_op','parser.py',156),
  ('relational_op -> EQ','relational_op',1,'p_relational_op','parser.py',157),
  ('lit_value -> INTEGER','lit_value',1,'p_lit_value','parser.py',163),
  ('lit_value -> STRING','lit_value',1,'p_lit_value','parser.py',164),
  ('lit_value -> BOOL','lit_value',1,'p_lit_value','parser.py',165),
]
